worker_processes 1;
error_log /dev/stdout info;

events {
    worker_connections 1024;
}

# Reverse proxy from localhost:3000 to outward facing port 443.
http {
    access_log /dev/stdout;

    upstream api_server {
        server api:3000;
    }

    # Configuration for the server.
    server {
        listen 8080;
        listen 443 ssl;
        server_name localhost;

        ssl_certificate /etc/nginx/ssl/server.crt;
        ssl_certificate_key /etc/nginx/ssl/server.key;

        location /core/v1.0.0/ {
            add_header 'Access-Control-Allow-Origin' '*' 'always';
            add_header 'Access-Control-Allow-Methods' 'GET,POST,PUT,DELETE,OPTIONS' 'always';
            add_header 'Access-Control-Allow-Headers' 'Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization' 'always';

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_pass     http://api_server;
            proxy_redirect off;

            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin *;
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Access-Control-Allow-Methods' 'GET,POST,PUT,DELETE,OPTIONS';
                #
                # Custom headers and headers various browsers *should* be OK with but aren't
                #
                add_header 'Access-Control-Allow-Headers' 'Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization';
                #
                # Tell client that this pre-flight info is valid for 20 days
                #
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }
    }
}
